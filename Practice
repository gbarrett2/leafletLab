//GOAL: Proportional symbols representing attribute values of mapped features
//STEPS:
//1. Create the Leaflet map--done (in createMap())
//2. Import GeoJSON data--done (in getData())
//3. Add circle markers for point features to the map--done (in AJAX callback)
//4. Determine which attribute to visualize with proportional symbols
//5. For each feature, determine its value for the selected attribute
//6. Give each feature's circle marker a radius based on its attribute value



    /* Map of GeoJSON data from rent.geojson */

    //function to instantiate the Leaflet map
    function createMap(){
        //create the map
        var map = L.map('map', {
            center: [20, 0],
            zoom: 2
        });

        //add OSM base tilelayer
        L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap contributors</a>'
        }).addTo(map);

        //call getData function
        getData(map);
    };

    //function to retrieve the data and place it on the map
    function getData(map){
        //load the data
     $.ajax("data/rent.geojson", {
         dataType: "json",
         success: function(response){
           console.log(mydata);
             //create marker options
             var geojsonMarkerOptions = {
                 radius: 8,
                 fillColor: "#ff7800",
                 color: "#000",
                 weight: 1,
                 opacity: 1,
                 fillOpacity: 0.8
             };

             //create a Leaflet GeoJSON layer and add it to the map
             L.geoJson(response, {
                 pointToLayer: function (feature, latlng){
                     return L.circleMarker(latlng, geojsonMarkerOptions);
                 }
             }).addTo(map);
         }
     });
   }
    $(document).ready(createMap);

    //Step 2: Import GeoJSON data
    function getData(map){
        //load the data
        $.ajax("data/rent.geojson", {
            dataType: "json",
            success: function(response){
                //call function to create proportional symbols
                createPropSymbols(response, map);
            }
        });
    };

//Step 3: Add circle markers for point features to the map
function createPropSymbols(data, map){
  //Step 4: Determine which attribute to visualize with proportional symbols
    var attribute = "Rent";
    //create marker options
    var geojsonMarkerOptions = {
        radius: 8,
        fillColor: "#ff7800",
        color: "#000",
        weight: 1,
        opacity: 1,
        fillOpacity: 0.8
    };

    //create a Leaflet GeoJSON layer and add it to the map
    L.geoJson(data, {
           pointToLayer: function (feature, latlng) {
               //Step 5: For each feature, determine its value for the selected attribute
               var attValue = Number(feature.properties[attribute]);



               //Give each feature's circle marker a radius based on its attribute value
               options.radius = calcPropRadius(attValue);

               //create circle marker layer
               var layer = L.circleMarker(latlng, options);

               //build popup content string
               var popupContent = "<p><b>City:</b> " + feature.properties.City + "</p><p>15-Dec<b>" + attribute + ":</b> " + feature.properties[attribute] + "</p>";

               //bind the popup to the circle marker
               layer.bindPopup(popupContent);

               //return the circle marker to the L.geoJson pointToLayer option
               return layer;

               //examine the attribute value to check that it is correct
               console.log(feature.properties, attValue);

               //create circle markers
               return L.circleMarker(latlng, geojsonMarkerOptions);
           }
       }).addTo(map);
       //calculate the radius of each proportional symbol
function calcPropRadius(attValue) {
    //scale factor to adjust symbol size evenly
    var scaleFactor = 50;
    //area based on attribute value and scale factor
    var area = attValue * scaleFactor;
    //radius calculated based on area
    var radius = Math.sqrt(area/Math.PI);

    return radius;
};
   };




//GOAL: Allow the user to sequence through the attributes and resymbolize the map
//   according to each attribute
//STEPS:
//1. Create slider widget
//2. Create skip buttons
//3. Create an array of the sequential attributes to keep track of their order
//4. Assign the current attribute based on the index of the attributes array
//5. Listen for user input via affordances
//6. For a forward step through the sequence, increment the attributes array index;
//   for a reverse step, decrement the attributes array index
//7. At either end of the sequence, return to the opposite end of the seqence on the next step
//   (wrap around)
//8. Update the slider position based on the new index
//9. Reassign the current attribute based on the new attributes array index
//10. Resize proportional symbols according to each feature's value for the new attribute
//Step 1: Create new sequence controls

function createSequenceControls(map){
    //create range input element (slider)
    $('#panel').append('<input class="range-slider" type="range">');

  //set slider attributes
  $('.range-slider').attr({
      max: 6,
      min: 0,
      value: 0,
      step: 1
  });
};

//Import GeoJSON data
function getData(map){
    //load the data
    $.ajax("data/rent.geojson", {
        dataType: "json",
        success: function(response){

            createPropSymbols(response, map);
            createSequenceControls(map);

        }
    });
};






var rent = [{
    "type": "Feature",
    "properties": {
        "city": "Austin",
        "schools": true,
        "pop" : false,
        "transportation" : false,
    },
    "geometry": {
        "type": "Point",
        "coordinates": [-97.771258, 30.326374]
    }
}, {
    "type": "Feature",
    "properties": {
      "City": "San Francisco",
      "schools": true,
      "pop": false,
      "transportation": false,
    },
    "geometry": {
        "type": "Point",
        "coordinates": [-122.417481, 37.776646]
    }
  },
  {
      "type": "Feature",
      "properties": {
        "City": "New York",
        "schools": false,
        "pop": true,
        "transportation": true,
      },
      "geometry": {
          "type": "Point",
          "coordinates": [-74.018244, 40.68863]
      }
  }, {
      "type": "Feature",
      "properties": {
        "City": "Boston",
        "schools": true,
        "pop": true,
        "transportation": false,
      },
      "geometry": {
          "type": "Point",
          "coordinates": [-71.026964, 42.370567]
      }
    },{
        "type": "Feature",
        "properties": {
          "City": "Oakland",
          "schools": false,
          "pop": false,
          "transportation": false,
        },
        "geometry": {
            "type": "Point",
            "coordinates": [-122.223779, 37.786027]
        }
    }, {
        "type": "Feature",
        "properties": {
          "City": "Washington",
          "schools": true,
          "pop": false,
          "transportation": false,
        },
        "geometry": {
            "type": "Point",
            "coordinates": [-77.016719, 38.911936]
        }
      },{
            "type": "Feature",
            "properties": {
              "City": "San Jose",
              "schools": false,
              "pop": false,
              "transportation": true,
            },
            "geometry": {
                "type": "Point",
                "coordinates": [-121.705327, 37.189396]
            }
        }, {
            "type": "Feature",
            "properties": {
              "City": "Chicago",
              "schools": true,
              "pop": true,
              "transportation": false,
            },
            "geometry": {
                "type": "Point",
                "coordinates": [-87.62213, 41.88531]
            }
          },{
              "type": "Feature",
              "properties": {
                "City": "Los Angeles",
                "schools": false,
                "pop": true,
                "transportation": true,
              },
              "geometry": {
                  "type": "Point",
                  "coordinates": [-118.248405, 33.973951]
              }
          }, {
              "type": "Feature",
              "properties": {
                "City": "Miami",
                "schools": false,
                "pop": false,
                "transportation": false,
              },
              "geometry": {
                  "type": "Point",
                  "coordinates": [-80.458168, 25.558428]
              }
            },{
                  "type": "Feature",
                  "properties": {
                    "City": "Seattle",
                    "schools": false,
                    "pop": false,
                    "transportation": true,
                  },
                  "geometry": {
                      "type": "Point",
                      "coordinates": [  -121.803388,
                        47.432251]
                  }
              }, {
                  "type": "Feature",
                  "properties": {
                    "City": "San Diego",
                    "schools": false,
                    "pop": false,
                    "transportation": true,
                  },
                  "geometry": {
                      "type": "Point",
                      "coordinates": [  -117.170912,
                        32.724103]
                  }
                }, {
                    "type": "Feature",
                    "properties": {
                      "City": "Denver",
                      "schools": false,
                      "pop": false,
                      "transportation": true,
                    },
                    "geometry": {
                        "type": "Point",
                        "coordinates": [    -104.856808,
                            39.726303]
                    }
                }, {
                    "type": "Feature",
                    "properties": {
                      "City": "Atlanta",
                      "schools": false,
                      "pop": false,
                      "transportation": false,
                    },
                    "geometry": {
                        "type": "Point",
                        "coordinates": [  -84.47405,
                          33.844371]
                    }
                  },{
                      "type": "Feature",
                      "properties": {
                        "City": "Baltimore",
                        "schools": false,
                        "pop": false,
                        "transportation": false,
                      },
                      "geometry": {
                          "type": "Point",
                          "coordinates": [  -76.623489,
                            39.296536]
                      }
                  }, {
                      "type": "Feature",
                      "properties": {
                        "City": "Philadelphia",
                        "schools": false,
                        "pop": true,
                        "transportation": false,
                      },
                      "geometry": {
                          "type": "Point",
                          "coordinates": [    -75.11787,
                              40.001811]
                      }
                    },{
                          "type": "Feature",
                          "properties": {
                            "City": "Long Beach",
                            "schools": false,
                            "pop": false,
                            "transportation": false,
                          },
                          "geometry": {
                              "type": "Point",
                              "coordinates": [-118.200957,
                              33.804309]
                          }
                      }, {
                          "type": "Feature",
                          "properties": {
                            "City": "Dallas",
                            "schools": false,
                            "pop": false,
                            "transportation": false,
                          },
                          "geometry": {
                              "type": "Point",
                              "coordinates": [-96.790329,
                              32.781179]
                          }
                        },{
                            "type": "Feature",
                            "properties": {
                              "City": "Minneapolis",
                              "schools": false,
                              "pop": false,
                              "transportation": false,
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [  -93.269097,
                                  44.984577]
                            }
                        }, {
                            "type": "Feature",
                            "properties": {
                              "City": "Houston",
                              "schools": false,
                              "pop": true,
                              "transportation": false,
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [-95.309789,
                                29.813142]
                            }
}];
